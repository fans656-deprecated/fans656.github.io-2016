2016-05-15 08:15:27
准备搭一个个人的技术博客。是的，晓得有不少现成的工具可用(WordPress、github.io、Jekyll等等)，但自己还是想先从零开始尝试一下；之后再去参照这些工具，就更能理解个中技术的来龙去脉(就像当初学设计模式，因为自己确实在实际的开发中遇到过痛点，所以看到一个正好用来解决某个痛点的模式时就更能理解和印象深刻)
想要采用的大抵技术路线如下：
    
    本地 python + git 将 txt 文件转换为 html
    上传至远程 git repo
    服务器 pull 下来更新了的 repo，更新网站

不用 github.io 是因为将来想有评论功能，而 g 只能做静态页面
本地 txt -> html 的功能大抵是 Jekyll 的功能，自己试着造个轮子
服务器如果找不到好的就用自己的 Bandwagon VPS 吧
now, let the coding begin...

2016-05-15 08:43:32
写起来就会发现具体的功能要求，比如从txt到html的转义问题：
    
    左右尖括号这种需要转义成 &lt; 等
    txt中的换行不加处理的话，在html中显示出来就是一坨，需要加 <br>

2016-05-15 08:50:40
输出html的文件夹，目前是每次输出都删掉重新建一个，发现
    
    shutil.rmtree()
    os.mkdir()

有时候会在 mkdir 时 Permission denied

http://stackoverflow.com/questions/16373747/permission-denied-doing-os-mkdird-after-running-shutil-rmtreed-in-python
这里说了这个问题
总的来说就是 windows 删除文件可能是 asynchronous 的
所以解决办法么，就是 retry with a delay

2016-05-15 09:16:45
好了，输出差不多了——差不多的意思其实只是有了可用的功能，效果上嘛，等整个流程走通了，再去雕琢细节

2016-05-15 09:25:56
刚才说上传的流程中利用 git ，为什么要用它呢？琢磨了一下，发觉主要是用它的 diff 功能——增量更新；否则如果直接给服务器上传的话，内容一多，每次都传所有内容是比较浪费的，而且没备案的东西直接明文在网上跑也怕VPS被封掉

2016-05-15 09:48:23
git nested repo 比较麻烦，琢磨怎么绕过去，，最暴力的方法当然是把输出放到一个没有 parent repo 的地方

2016-05-15 10:01:25
local repo commit 搞定了，下来想想怎么弄服务器那边

2016-05-15 11:04:35
发现部署是个问题.. 这相当于建站了
自己这个设定相当于整个网站其实是放在一个 repo 里的
    repo/
        content/   # posts of txt
        output/    # the site
现在用flask的话，其实很多部分是静态页面，应该直接用apache来server
但是只用apache也不行，以后还会有动态的内容
所以.. 看样子得学学apache

2016-05-15 12:30:20
vps 上跑的是 centos，因为翻墙的缘故 putty ssh 比较慢
所以开个虚拟机学 apache，虚拟机上跑的是 ubuntu
两个发行版的 apache 有些配置细节不一样，但大同小异都可以 google

2016-05-15 23:21:43
脚本里对文件系统里的操作过快就会出现各种人工操作遇不到的问题
之前的一个 rmdir mkdir 因为操作系统 asynchronously 出问题
这次又遇到一个文件 flush 问题
    index_file = open('index.html', 'w') 
之后向这个文件写入内容后直接subprocess进行git操作，结果commit上去的总是一个空文件
最后在git操作前 index_file.close() 了一下就好了——这是强制把内存里的数据flush进文件了
另外commit不上内容也是因为第一次commit了新文件，而之后每次清空 public_html 文件夹重新创建这些内容，执行相同的程序逻辑，就总是相同的结果

2016-05-15 23:43:00
给 vps 部上去了，，下一步是加个每次本地commit之后给服务器发消息让它去pull一下的机制
然后就可以完全本地操作而直接看到外网开放的网站内容了，哈哈~~

2016-05-16 10:43:52
搞定 apache mod_wsgi + flask 了
卡在 ImportError 上好久，最后靠强行在 sys.path 里添加 flask 所在路径解决了
应该是还有更好的解决办法的

下来试一试自动pull

2016-05-16 13:26:04
被 apache 接管的 python 执行环境很蛋疼，没有输出也看不到exception
最后用这里的一个方法开启了flask的debug模式
http://stackoverflow.com/a/32789559/3881776

现在在tackle执行git命令出错的问题
另外，还有一个问题是flask开启后原来的静态页面服务器不server了

2016-05-16 15:00:45
再试一次
